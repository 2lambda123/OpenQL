# File:         test_nested_rus_angle_0.cq
# Purpose:      test Repeat Until Success
# Based on:     tst case test_cc.py::test_nested_rus_angle_0

version 1.2

pragma @ql.name("test_nested_rus_angle_0")
pragma @ql.platform("config_cc_s17_direct_iq_openql_0_10.json")


.def
map qAncilla1 = q[10]
map bAncilla1 = b[10]
map qAncilla2 = q[8]
map bAncilla2 = b[8]
map qData = q[11]

map angle = 0
map echo_delay_inner_rus = 1
map echo_delay_inner_rus_data = 1
map echo_delay_outer_rus = 1

.init
prepz qAncilla1
prepz qAncilla2
prepz qData
#'cw_{:02}'.format(int(angle) // 20 + 9), [qData 
barrier

.rus
repeat {
    while (True) {
        rx2theta qAncilla1
        rym90 qAncilla2
        cz qAncilla1, qAncilla2
        rxm2theta qAncilla1
        ry90beta qAncilla2
        barrier qAncilla1,qAncilla2

        rphi180 qData
        measure_fb qAncilla1
        wait qAncilla2, echo_delay_inner_rus
        rphi180 qAncilla2
#        wait qAncilla2, 1860-echo_delay_inner_rus
        wait qData, echo_delay_inner_rus_data
        barrier qAncilla1,qAncilla2,qData
        if (!bAncilla1) {
            break
        }
#        barrier qAncilla1,qAncilla2,qData

        rx180 qAncilla1
        rxm90 qAncilla2
        rx180 qData
        barrier qAncilla1,qAncilla2,qData
    }

    # FIXME: starts new block counting from 0
    rx180 qAncilla2
    rx180 qData
    rym90 qData
    cz qAncilla2, qData
    ry90 qData

    while(True) {
        rx2theta qAncilla1
        rym90alpha qAncilla2
        cz qAncilla1, qAncilla2
        rx2thetaalpha qAncilla1
        ry90betapi qAncilla2
        barrier qAncilla1,qAncilla2
        rphi180beta qData
        measure_fb qAncilla1
        wait qAncilla2, echo_delay_inner_rus
        rphi180alpha qAncilla2
#        wait qAncilla2, 1860-echo_delay_inner_rus
        wait qData, echo_delay_inner_rus_data
        barrier qAncilla1,qAncilla2,qData

        if (!bAncilla1) {
            break
        }
#        barrier qAncilla1,qAncilla2,qData

        rx180 qAncilla1
        rx90alpha qAncilla2
        rx180beta qData
#        barrier qAncilla1,qAncilla2,qData
    }

    barrier qAncilla2,qData
    rx180alpha2 qAncilla2
    measure_fb qAncilla2
    wait qData, echo_delay_outer_rus
    rphi180beta2 qData
#    wait qData, 1880-echo_delay_outer_rus
    barrier qAncilla2,qData
} until (!bAncilla2)
measure_fb qData
