%option noinput nounput noyywrap 8bit nodefault
%option prefix="cqasm_v1"
%option yylineno
%option reentrant bison-bridge bison-locations

%{
    /**
     * \file
     * Lexer/tokenizer, generated by Flex.
     */
    #include "cqasm-v1-parser.hpp"

    //#define DEBUG(...) fprintf(stderr, __VA_ARGS__)
    #define DEBUG(...)

    #define YY_USER_ACTION yylloc->last_column += yyleng;
    #define LOCATION_RESET \
        yylloc->first_column = 1; yylloc->first_line = 1; \
        yylloc->last_column = 1; yylloc->last_line = 1;
    #define LOCATION_LINE \
        yylloc->last_column = 1; yylloc->last_line += 1;
    #define LOCATION_OVERRIDE_LINE \
        yylloc->last_column = 1; yylloc->last_line = std::strtol(yylval->str + 12, nullptr, 10);
    #define LOCATION_STEP \
        yylloc->first_column = yylloc->last_column; \
        yylloc->first_line = yylloc->last_line;
    #define WITH_STR(TOKNAME) \
        DEBUG("Pushing %s token (%s) starting at %d:%d\n", #TOKNAME, yytext, yylloc->first_line, yylloc->first_column); \
        yylval->str = strdup(yytext); return TOKNAME
    #define WITHOUT_STR(TOKNAME) \
        DEBUG("Pushing %s token starting at %d:%d\n", #TOKNAME, yylloc->first_line, yylloc->first_column); \
        return TOKNAME
    #define OPERATOR \
        DEBUG("Pushing '%c' token starting at %d:%d\n", yytext[0], yylloc->first_line, yylloc->first_column); \
        return yytext[0]
    #define DELETE LOCATION_STEP
%}

%x MODE_MULTILINE_COMMENT
%x MODE_VERSION
%x MODE_STRING
%x MODE_JSON
%x MODE_JSON_STRING
%x MODE_UNEXPECTED_EOF

%%

%{
    LOCATION_STEP;
%}

    /*=======================================================================*/
    /* VERSION STATEMENT                                                     */
    /*=======================================================================*/

    /* This is treated separately to avoid conflicts with float literals */
(?i:version)                                        BEGIN(MODE_VERSION); WITHOUT_STR(VERSION);
}                                            WITHOUT_STR(BAD_CHARACTER);

