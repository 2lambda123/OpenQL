name: Test

on:
  push:
    branches:
    - develop
  pull_request:

jobs:
  cpp:
    name: 'C++'
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
        - ubuntu-latest
        - macos-latest
        - windows-latest
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - name: Install dependencies
      if: matrix.os == 'macos-latest'
      run: |
        brew install bison flex
        echo "::add-path::/usr/local/opt/bison/bin"
        echo "::add-path::/usr/local/opt/flex/bin"
    - uses: actions/cache@v2
      if: matrix.os == 'windows-latest'
      with:
        path: C:\Users\runneradmin\AppData\Local\Temp\chocolatey
        key: ${{ runner.os }}-chocolatey-cpp-0
        restore-keys: |
          ${{ runner.os }}-chocolatey-cpp-
          ${{ runner.os }}-chocolatey-
    - name: Install dependencies
      if: matrix.os == 'windows-latest'
      run: choco install winflexbison3
    - name: Configure
      run: cmake . -DCMAKE_BUILD_TYPE=Debug -DOPENQL_BUILD_TESTS=ON -DBUILD_SHARED_LIBS=OFF
    - name: Build
      run: cmake --build . --parallel
    - name: Test
      run: ctest -C Debug --output-on-failure

  python:
    name: Python
    runs-on: ${{ matrix.os }}
    env:
      OPENQL_BUILD_TYPE: 'Debug'
    strategy:
      fail-fast: false
      matrix:
        os:
        - ubuntu-latest
        - macos-latest
        - windows-latest
        python:
        - '3.5'
        - '3.6'
        - '3.7'
        - '3.8'
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python }}
    - name: Install dependencies
      run: python -m pip install --upgrade pip setuptools wheel pytest numpy
    - name: Install dependencies
      if: matrix.os == 'ubuntu-latest'
      run: sudo apt-get install -y swig
    - name: Install dependencies
      if: matrix.os == 'macos-latest'
      run: |
        brew install bison flex swig
        echo "::add-path::/usr/local/opt/bison/bin"
        echo "::add-path::/usr/local/opt/flex/bin"
    - uses: actions/cache@v2
      if: matrix.os == 'windows-latest'
      with:
        path: C:\Users\runneradmin\AppData\Local\Temp\chocolatey
        key: ${{ runner.os }}-chocolatey-python-1
        restore-keys: |
          ${{ runner.os }}-chocolatey-python-
          ${{ runner.os }}-chocolatey-
    - name: Install dependencies
      if: matrix.os == 'windows-latest'
      shell: powershell
      run: |
        choco install winflexbison3
        choco install swig --version 4.0.1
        echo "::set-env name=OPENQL_BUILD_TYPE::Release"
    - name: Build
      env:
        NPROCS: 100
      run: python -m pip install --verbose .
    - name: Test
      run: python -m pytest

  conda:
    name: Conda
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
        - ubuntu-latest
        - macos-latest
        - windows-latest
        python-version:
        - 3.8
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - name: Setup conda
      uses: s-weigand/setup-conda@v1
      with:
        update-conda: true
        python-version: ${{ matrix.python-version }}
        conda-channels: anaconda, conda-forge
    - run: conda install conda-build conda-verify -y
    - run: conda-build conda-recipe
