name: Test

on:
  push:
    branches:
    - v3

jobs:
#  cpp:
#    name: 'C++ tests (Conan builds)'
#    runs-on: ${{ matrix.os }}
#    strategy:
#      fail-fast: false
#      matrix:
#        os:
#        - ubuntu-latest
#        - macos-latest
#        - windows-latest
#    steps:
#      - name: Get latest CMake
#        uses: lukka/get-cmake@latest
#      - name: Install Conan
#        id: conan
#        uses: turtlebrowser/get-conan@main
#      - name: Conan version
#        run: echo "${{ steps.conan.outputs.version }}"
#      - name: Checkout
#        uses: actions/checkout@v3
#        with:
#          submodules: recursive
#      - name: Conan install and build
#        run: |
#          conan profile detect
#          conan build . -s:h compiler.cppstd=23 -s:h ql/*:build_type=Debug -o ql/*:build_tests=True -o ql/*:build_cpp_standalone_example=True -b missing
#      - name: Run tests and standalone program
#        run: |
#          ctest -C Debug --output-on-failure
#          ./example
#        shell: bash
#        working-directory: build/Debug

  python:
    name: Python
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
        - ubuntu-latest
#        - macos-latest
#        - windows-latest
        python:
#        - '3.7'
#        - '3.8'
#        - '3.9'
#        - '3.10'
        - '3.11'
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive
    - uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python }}
    - name: Install dependencies
      run: python -m pip install --upgrade --use-pep517 pip setuptools wheel pytest numpy conan
    - name: Install dependencies
      if: matrix.os == 'ubuntu-latest'
      run: sudo apt-get install -y swig
    - name: Install dependencies
      if: matrix.os == 'macos-latest'
      run: |
        brew install bison flex swig xquartz
        echo "/usr/local/opt/bison/bin" >> $GITHUB_PATH
        echo "/usr/local/opt/flex/bin" >> $GITHUB_PATH
    - uses: actions/cache@v3
      if: matrix.os == 'windows-latest'
      with:
        path: C:\Users\runneradmin\AppData\Local\Temp\chocolatey
        key: ${{ runner.os }}-chocolatey-python-1
        restore-keys: |
          ${{ runner.os }}-chocolatey-python-
          ${{ runner.os }}-chocolatey-
    - name: Install dependencies
      if: matrix.os == 'windows-latest'
      shell: powershell
      run: |
        choco install winflexbison3 --version 2.5.18.20190508
    - name: Select build type
      if: matrix.os == 'windows-latest'
      shell: powershell
      run: echo "OPENQL_BUILD_TYPE=Release" >> $GITHUB_ENV
    - name: Select build type
      if: matrix.os != 'windows-latest'
      run: echo "OPENQL_BUILD_TYPE=Debug" >> $GITHUB_ENV
    - name: Build
      env:
        NPROCS: 5
      run: |
        conan profile detect
        python -m pip install --verbose .
    - name: Test
      run: python -m pytest
